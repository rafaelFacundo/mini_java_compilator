PARSER_BEGIN (MyParser)
    class MyParser {}
PARSER_END (MyParser)

TOKEN : {
    < #DIGIT: ["0"-"9"] >
    | < INT: (<DIGIT>)+ >
    | < BOOLEAN: (["0"-"1"])+ >
    | < IF: ("if") >
    | < ELSE: ("else") >
    | < WHILE: ("while") >
    | < TRUE: ("true") >
    | < FALSE: ("false") >
    | < THIS: ("this") >
    | < NEW: ("new") >
    | < PLUS: ("+") >
    | < MINUS: ("-") >
    | < MULT: ("*") >
    | < LOGIC_AND: ("&&") >
    | < LOGIC_NOT: ("!") >
    | < SMALLER: ("<") >
    | < EQUAL: ("=") >
    | < LENGHT: ("lenght") >
    | < SYSTEM_OUT_PRINTLN: ("System.out.println") >
    | < PUBLIC: ("public") >
    | < STATIC: ("static") >
    | < VOID: ("void") >
    | < MAIN: ("main") >
    | < STRING: ("String") >
    | < CLASS: ("class") >
    | < EXTENDS: ("extends") >
    | < RETURN: ("return") >
    | < IDENTIFIER: (["a"-"z"]) (["a"-"z"] ["0"-"9"])* >
    | < EOF: ("") >
}

TOKEN: {
    <DOT: ".">
    | <COMMA: ",">
    | <SCOLON: ";">
    | <LPAR: "(">
    | <RPAR: ")">
    | <LBRACKET: "[">
    | <RBRACKET: "]">
    | <LBRACE: "{">
    | <RBRACE: "}">
}

SKIP : {
    " "
    | "\t"
    | "\n"
    | "\r"
    | <"//" (["a"-"z"])* (["0"-"9"])* ("\n")>
    | <"/*" (["a"-"z"])* (["0"-"9"])* ("*")*  ("\n" | "\r" | "\r\n") "*/">
}